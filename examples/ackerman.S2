# run S2c -x ackerman.S2

Ack = PROC(m, n) : IF ( not $m,
                        $n + 1,
                        IF ( not $n,
                             recur( $m - 1, 1),
                             recur( $m - 1, Ack($m, $n - 1))));


SELECT print($count$,                 # current step
             "Ack(",$m,",",$n,") =",  # string representation of called Ack
             Ack($m, $n))             # calling ackerman with given parameters
  FROM n:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
       m:[0, 1, 2, 3]
    AS void; # no real output is generated, only the last result gets returned

/* OUTPUT:
 1 Ack( 0 , 0 ) = 1
 2 Ack( 0 , 1 ) = 2
 3 Ack( 0 , 2 ) = 3
 4 Ack( 0 , 3 ) = 4
 5 Ack( 0 , 4 ) = 5
 6 Ack( 0 , 5 ) = 6
 7 Ack( 0 , 6 ) = 7
 8 Ack( 0 , 7 ) = 8
 9 Ack( 0 , 8 ) = 9
10 Ack( 0 , 9 ) = 10
11 Ack( 1 , 0 ) = 2
12 Ack( 1 , 1 ) = 3
13 Ack( 1 , 2 ) = 4
14 Ack( 1 , 3 ) = 5
15 Ack( 1 , 4 ) = 6
16 Ack( 1 , 5 ) = 7
17 Ack( 1 , 6 ) = 8
18 Ack( 1 , 7 ) = 9
19 Ack( 1 , 8 ) = 10
20 Ack( 1 , 9 ) = 11
21 Ack( 2 , 0 ) = 3
22 Ack( 2 , 1 ) = 5
23 Ack( 2 , 2 ) = 7
24 Ack( 2 , 3 ) = 9
25 Ack( 2 , 4 ) = 11
17 Ack( 1 , 6 ) = 8
18 Ack( 1 , 7 ) = 9
19 Ack( 1 , 8 ) = 10
20 Ack( 1 , 9 ) = 11
21 Ack( 2 , 0 ) = 3
22 Ack( 2 , 1 ) = 5
23 Ack( 2 , 2 ) = 7
24 Ack( 2 , 3 ) = 9
25 Ack( 2 , 4 ) = 11
26 Ack( 2 , 5 ) = 13
27 Ack( 2 , 6 ) = 15
28 Ack( 2 , 7 ) = 17
29 Ack( 2 , 8 ) = 19
30 Ack( 2 , 9 ) = 21
31 Ack( 3 , 0 ) = 5
32 Ack( 3 , 1 ) = 13
33 Ack( 3 , 2 ) = 29
34 Ack( 3 , 3 ) = 61
26 Ack( 2 , 5 ) = 13
27 Ack( 2 , 6 ) = 15
28 Ack( 2 , 7 ) = 17
29 Ack( 2 , 8 ) = 19
30 Ack( 2 , 9 ) = 21
31 Ack( 3 , 0 ) = 5
32 Ack( 3 , 1 ) = 13
33 Ack( 3 , 2 ) = 29
34 Ack( 3 , 3 ) = 61
35 Ack( 3 , 4 ) = 125
36 Ack( 3 , 5 ) = 253
37 Ack( 3 , 6 ) = 509
38 Ack( 3 , 7 ) = 1021
39 Ack( 3 , 8 ) = 2045
40 Ack( 3 , 9 ) = 4093
*/
